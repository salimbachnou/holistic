const mongoose = require('mongoose');
const NotificationService = require('../services/notificationService');

// Configuration de la connexion MongoDB
const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/holistic';

async function simpleNotificationTest() {
  try {
    console.log('üîç Connexion √† MongoDB...');
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ Connect√© √† MongoDB');

    console.log('\nüîî === TEST SIMPLE DE NOTIFICATION ===\n');

    // Test avec un userId direct
    const testUserId = '687f4021ba451bc1ba3c9a1c'; // ID du professionnel dz dza
    
    console.log(`üìä Test avec userId: ${testUserId}`);

    try {
      const notification = await NotificationService.createClientNotification(
        testUserId,
        'Test de notification d\'√©v√©nement',
        'Ceci est un test de notification pour un √©v√©nement.',
        'event_booking_request',
        '/dashboard/professional/events/test',
        {
          eventId: 'test-event-id',
          eventTitle: 'Test Event',
          clientName: 'Test Client'
        }
      );

      if (notification) {
        console.log('‚úÖ Notification cr√©√©e avec succ√®s !');
        console.log(`   - ID: ${notification._id}`);
        console.log(`   - Titre: ${notification.title}`);
        console.log(`   - Message: ${notification.message}`);
        console.log(`   - Type: ${notification.type}`);
        console.log(`   - UserId: ${notification.userId}`);
      } else {
        console.log('‚ùå √âchec de la cr√©ation de la notification');
      }
    } catch (error) {
      console.error('‚ùå Erreur lors de la cr√©ation de la notification:', error);
    }

    // V√©rifier les notifications cr√©√©es
    console.log('\nüìä === V√âRIFICATION DES NOTIFICATIONS ===\n');

    const Notification = require('../models/Notification');
    const notifications = await Notification.find({
      userId: testUserId
    }).sort({ createdAt: -1 }).limit(5);

    console.log(`üìä Notifications trouv√©es: ${notifications.length}`);
    notifications.forEach((notif, index) => {
      console.log(`\n${index + 1}. ${notif.title}`);
      console.log(`   - Message: ${notif.message}`);
      console.log(`   - Type: ${notif.type}`);
      console.log(`   - Cr√©√©e: ${notif.createdAt}`);
      console.log(`   - Lu: ${notif.read ? 'OUI' : 'NON'}`);
    });

    console.log('\n‚úÖ Test termin√©');

  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\nüîå D√©connect√© de MongoDB');
  }
}

// Ex√©cuter le script
simpleNotificationTest(); 